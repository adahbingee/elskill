#summary 編輯skill.xml

= 介紹 =

Elskill是一隻xml解析程式，從skill.xml文字檔中讀取既定的資料結構，加上遊戲技能配點邏輯而成。

本篇文章將會就skill.xml的結構作介紹和教學。


= 準備 =

開始編輯skill.xml之前，你可能會需要具備以下的基本知識和軟體:
  * 基本的XML觀念 (如果有撰寫xhtml或html的概念即可)
  * XML文字編輯軟體 (如[http://notepad-plus-plus.org/ notepad++])
  * 一顆熱情的心
  

= 編輯skill.xml =

== skill.xml ==
 * skill.xml位於程式的根目錄，一般來說是在C:\Program Files\Elskill
 * 當你試著修改skill.xml並發現程式錯誤當掉時，刪除掉該skill.xml並重啟程式，將會自動上網下載最新版的skill.xml
 * 請確認你的存檔格式為UTF-8，在notepad++下可以選擇 編碼>UTF-8編碼(檔首無BOM)
 * 要分享你的skill.xml檔案，建議上傳到免費空間，如[http://www.multiupload.com/ multiupload]

-----------------------------------------------------------------

== <elskill> ==

`<elskill>`是skill.xml的根元素，根據XML的標準，一個XML檔案需要並且也只能有一個根元素

與其他XML Tag相同，`<elskill>`必須是成對的，而其他所有標籤都必須要被包含在`<elskill>`標籤之中

<elskill>
  ...其他元素
</elskill>

`<elskill>`具有一個date屬性，他表示了這個skill.xml的更新日期

date是相對伺服器上的版本，不建議使用者修改這個數值，因為我要更新時將無法確定你是由哪個版本修改而來，並且過大的數值將會造成無法更新

所以一個完整的`<elskill>`應該寫成下面的形式

<elskill date="20080818">
  ...其他元素
</elskill>

程式是藉判斷date的大小決定你的skill.xml版本新舊，若是同一天有兩次以上的更新則會加入小數點來表示新舊，如

<elskill date="20080818.1">
  ...其他元素
</elskill>

-----------------------------------------------------------------

== <job> ==

`<job>`表示模擬器提供哪些職業選擇

`<job>`包含了兩個屬性，分別是icon與name。屬性並沒有先後順序的差別。

icon代表該職業圖示的路徑位置，原則上是相對於skill.xml的位置，原則上支援常見的jpg、png與gif格式

name則是描述該職業名稱

關於職業圖示與技能圖示，已經被包含在Elskill主程式之中，若你更新skill.xml之後發現有無法讀取的叉燒包，代表現版本的主程式可能沒有該圖示，請上網下載新版的主程式

同樣的，若你自己更新了圖示，要分享時也別忘了一並附在分享的檔案之中

包括了基本的根元素`<elskill>`，你已經可以寫出下面的xml了

<elskill date="20080818">
    <job icon="icon/myIcon.png" name="MyJob">
    </job>
</elskill>

代表我要讀取相對skill.xml檔案所存在的目錄之下icon資料夾下的myIcon.png作為職業圖示，並且將職業名稱設為`MyJob`。
-----------------------------------------------------------------

== <spLevel> ==

`<spLevel>`是`<job>`下的第一層標籤，表示一個sp等級間距，它有一個必要屬性是sp

sp依照遊戲設定是5sp一個間距，並且第一個`<spLevel>`是從sp = 0開始`<spLevel sp="0">`

現在我們可以把完整的XML寫成下面的形式

<elskill date="20080818">
    <job icon="icon/myIcon.png" name="MyJob">
        <spLevel sp="0">
        </spLevel>
        <spLevel sp="5">
        </spLevel>
    </job>
</elskill>

代表了我的職業有兩個sp等級間距，分別是0和5，下面我們就可以開始填入想要的技能了

-----------------------------------------------------------------

== <skill> ==

`<skill>`是`<spLevel>`的下層標籤，描述一個角色技能，它有幾個必要屬性，分別是 *name* 、 *icon* 、 *col*

也有幾個可選屬性，分別是 *level* 、 *mp* 、 *cd* 、 *pre* 與 *active* ，接下來會介紹這些屬性的功能和作用

 * *name*
 表示這個技能的名稱

 * *icon*
 與`<job>`的icon屬性相同作用，代表技能圖示的檔案位置

 * *col*
 代表技能所在的橫排順位，數字從0開始，4是最大值。並且同一組`<spLevel>`下不應該出現兩個相同的col值技能

 * *level* (可選)
 代表該技能的預設等級，預設技能等級不能被洗掉

 * *mp* (可選)
 表示技能消耗的mp。若為0或是沒有該項屬性，則該技能預設當作被動技能，若是要強制該技能為主動技能，則要加入active="true"屬性

 * *cd* (可選)
 表示技能的回復延遲時間

 * *pre* (可選)
 該技能的 *前置技能* 名稱，若填有該屬性，則強制要求該技能必須在前置技能滿級之後才能學習。並且目前遊戲設計該技能必須與同技能在同一行或同一列，否則程式將無法描繪出箭頭

 * *active* (可選)
 值應該為 *true* 或 *false* ，決定該技能是否為主動技能。目前主要是修正部分主動技能消耗mp為0被程式當作是被動技能的問題


-----------------------------------------------------------------

== <level> ==

`<level>`是`<skill>`下的標籤，一個`<skill>`下的`<level>`標籤數量直接決定該技能可點的等級

而`<level>`標籤中的文字就是該等級的技能敘述，如

<level>技能敘述</level>


-----------------------------------------------------------------